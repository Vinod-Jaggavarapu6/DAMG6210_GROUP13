SET SERVEROUTPUT ON;
-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_APP_ADMIN ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_APP_ADMIN';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1919 THEN
          dbms_output.put_line('ROLE WAREHOUSE_APP_ADMIN doesnot exist ');
        END IF;
END;
/
CREATE ROLE WAREHOUSE_APP_ADMIN;
GRANT CONNECT TO WAREHOUSE_APP_ADMIN;
GRANT CREATE SESSION, CREATE VIEW, CREATE TABLE, ALTER SESSION, CREATE SEQUENCE TO WAREHOUSE_APP_ADMIN;
GRANT CREATE SYNONYM, CREATE DATABASE LINK, RESOURCE TO WAREHOUSE_APP_ADMIN;

-- CREATE WAREHOUSE_APP_ADMIN_USER  ASSIGN WAREHOUSE_APP_ADMIN ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_APP_ADMIN_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1918 THEN
           dbms_output.put_line('User WAREHOUSE_APP_ADMIN_USER doesnot exist ');
        END IF;
END;
/

CREATE USER WAREHOUSE_APP_ADMIN_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_APP_ADMIN TO WAREHOUSE_APP_ADMIN_USER;
ALTER USER WAREHOUSE_APP_ADMIN_USER DEFAULT ROLE WAREHOUSE_APP_ADMIN;
ALTER USER WAREHOUSE_APP_ADMIN_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_APP_ADMIN_USER TEMPORARY TABLESPACE TEMP;

-- Grant the WAREHOUSE_APP_ADMIN_USER the ability to drop any table and sequence
GRANT DROP ANY TABLE, DROP ANY SEQUENCE TO WAREHOUSE_APP_ADMIN_USER;
 
BEGIN
    FOR t IN (SELECT table_name FROM all_tables WHERE owner = 'WAREHOUSE_APP_ADMIN_USER') LOOP
        EXECUTE IMMEDIATE 'GRANT ALL PRIVILEGES ON WAREHOUSE_APP_ADMIN_USER.' || t.table_name || ' TO WAREHOUSE_APP_ADMIN_USER';
    END LOOP;
END;
/


-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_OWNER ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_OWNER ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1919 THEN
           dbms_output.put_line('ROLE WAREHOUSE_OWNER doesnot exist ');
        END IF;
END;
/
CREATE ROLE WAREHOUSE_OWNER;
GRANT CONNECT TO WAREHOUSE_OWNER;
GRANT CREATE SESSION TO WAREHOUSE_OWNER;
GRANT SELECT (Lease_ID, Start_Date, End_Date, Lease_Amount, Payment_Status, Balance_Amount) ON WAREHOUSE_APP_ADMIN.LEASE TO WAREHOUSE_OWNER;
GRANT UPDATE (Owner_Name, Owner_Address, Email, Phone) ON WAREHOUSE_APP_ADMIN.WAREHOUSE_OWNER TO WAREHOUSE_OWNER;

-- CREATE WAREHOUSE_OWNER_USER AND ASSIGN WAREHOUSE_OWNER ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_OWNER_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            dbms_output.put_line('User WAREHOUSE_OWNER_USER doesnot exist ');
        END IF;
END;
/
CREATE USER WAREHOUSE_OWNER_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_OWNER TO WAREHOUSE_OWNER_USER;
ALTER USER WAREHOUSE_OWNER_USER DEFAULT ROLE WAREHOUSE_OWNER;
ALTER USER WAREHOUSE_OWNER_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_OWNER_USER TEMPORARY TABLESPACE TEMP;

-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_CUSTOMER ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_CUSTOMER ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1919 THEN
            dbms_output.put_line('ROLE WAREHOUSE_CUSTOMER doesnot exist ');
        END IF;
END;
/
CREATE ROLE WAREHOUSE_CUSTOMER;
GRANT CONNECT TO WAREHOUSE_CUSTOMER;
GRANT CREATE SESSION TO WAREHOUSE_CUSTOMER;
GRANT UPDATE (First_Name, Last_Name, Customer_Address, Email, Phone) ON WAREHOUSE_APP_ADMIN.CUSTOMER TO WAREHOUSE_CUSTOMER;
GRANT SELECT (Lease_ID, Start_Date, End_Date, Lease_Amount, Payment_Status, Balance_Amount) ON WAREHOUSE_APP_ADMIN.LEASE TO WAREHOUSE_CUSTOMER;


-- CREATE WAREHOUSE_CUSTOMER_USER AND ASSIGN WAREHOUSE_CUSTOMER ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_CUSTOMER_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            dbms_output.put_line('User WAREHOUSE_CUSTOMER_USER doesnot exist ');
        END IF;
END;
/

CREATE USER WAREHOUSE_CUSTOMER_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_CUSTOMER TO WAREHOUSE_CUSTOMER_USER;
ALTER USER WAREHOUSE_CUSTOMER_USER DEFAULT ROLE WAREHOUSE_CUSTOMER;
ALTER USER WAREHOUSE_CUSTOMER_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_CUSTOMER_USER TEMPORARY TABLESPACE TEMP;


-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_EMPLOYEE ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_EMPLOYEE ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1919 THEN
             dbms_output.put_line('ROLE WAREHOUSE_EMPLOYEE doesnot exist ');
        END IF;
END;
/ 
CREATE ROLE WAREHOUSE_EMPLOYEE;
GRANT CONNECT TO WAREHOUSE_EMPLOYEE;
GRANT CREATE SESSION TO WAREHOUSE_EMPLOYEE;

-- CREATE WAREHOUSE_EMPLOYEE_USER AND ASSIGN WAREHOUSE_EMPLOYEE ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_EMPLOYEE_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            dbms_output.put_line('User WAREHOUSE_EMPLOYEE_USER doesnot exist ');
        END IF;
END;
/
CREATE USER WAREHOUSE_EMPLOYEE_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_EMPLOYEE TO WAREHOUSE_EMPLOYEE_USER;
ALTER USER WAREHOUSE_EMPLOYEE_USER DEFAULT ROLE WAREHOUSE_EMPLOYEE;
ALTER USER WAREHOUSE_EMPLOYEE_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_EMPLOYEE_USER TEMPORARY TABLESPACE TEMP;













