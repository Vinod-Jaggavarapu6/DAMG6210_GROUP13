PURGE RECYCLEBIN;

SET SERVEROUTPUT ON;
-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_OWNER ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_OWNER ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1919 THEN
           dbms_output.put_line('ROLE WAREHOUSE_OWNER does not exist. Proceeding to create the role');
        END IF;
END;
/
CREATE ROLE WAREHOUSE_OWNER;
GRANT CONNECT TO WAREHOUSE_OWNER;
GRANT CREATE SESSION TO WAREHOUSE_OWNER;
--GRANT SELECT ON WAREHOUSE_APP_ADMIN_USER.WAREHOUSE TO WAREHOUSE_OWNER;
--GRANT SELECT ON WAREHOUSE_APP_ADMIN_USER.WAREHOUSE_OWNER TO WAREHOUSE_OWNER;
-- GRANT SELECT ON WAREHOUSE_APP_ADMIN_USER.LEASE TO WAREHOUSE_OWNER;
GRANT SELECT ON Owners_Revenue_By_Warehouse TO WAREHOUSE_OWNER;
GRANT SELECT ON warehouse_availability_by_location TO WAREHOUSE_OWNER;

GRANT UPDATE (Owner_Name, Owner_Address, Email, Phone) ON WAREHOUSE_APP_ADMIN_USER.WAREHOUSE_OWNER TO WAREHOUSE_OWNER;

-- CREATE WAREHOUSE_OWNER_USER AND ASSIGN WAREHOUSE_OWNER ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_OWNER_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            dbms_output.put_line('User WAREHOUSE_OWNER_USER does not exist. Proceeding to create the user');
        END IF;
END;
/
CREATE USER WAREHOUSE_OWNER_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_OWNER TO WAREHOUSE_OWNER_USER;
ALTER USER WAREHOUSE_OWNER_USER DEFAULT ROLE WAREHOUSE_OWNER;
ALTER USER WAREHOUSE_OWNER_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_OWNER_USER TEMPORARY TABLESPACE TEMP;

-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_CUSTOMER ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_CUSTOMER ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -1919 THEN
            dbms_output.put_line('ROLE WAREHOUSE_CUSTOMER does not exist. Proceeding to create the role');
        END IF;
END;
/
CREATE ROLE WAREHOUSE_CUSTOMER;
GRANT CONNECT TO WAREHOUSE_CUSTOMER;
GRANT CREATE SESSION TO WAREHOUSE_CUSTOMER;
-- GRANT SELECT ON WAREHOUSE_APP_ADMIN_USER.CUSTOMER TO WAREHOUSE_CUSTOMER;
-- GRANT SELECT ON WAREHOUSE_APP_ADMIN_USER.LEASE TO WAREHOUSE_CUSTOMER;
-- GRANT SELECT ON WAREHOUSE_APP_ADMIN_USER.SERVICE_REQUEST TO WAREHOUSE_CUSTOMER;
GRANT UPDATE (First_Name, Last_Name, Customer_Address, Email, Phone) ON WAREHOUSE_APP_ADMIN_USER.CUSTOMER TO WAREHOUSE_CUSTOMER;
GRANT INSERT ON WAREHOUSE_APP_ADMIN_USER.CUSTOMER TO WAREHOUSE_CUSTOMER;
GRANT SELECT ON customer_lease_details_view TO WAREHOUSE_CUSTOMER;
GRANT SELECT ON service_request_status_warehouse_view TO WAREHOUSE_CUSTOMER;
GRANT SELECT ON payment_summary_view TO WAREHOUSE_CUSTOMER;
GRANT SELECT ON warehouse_availability_by_location TO WAREHOUSE_CUSTOMER;
-- CREATE WAREHOUSE_CUSTOMER_USER AND ASSIGN WAREHOUSE_CUSTOMER ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_CUSTOMER_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            dbms_output.put_line('User WAREHOUSE_CUSTOMER_USER does not exist. Proceeding to create the user');
        END IF;
END;
/

CREATE USER WAREHOUSE_CUSTOMER_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_CUSTOMER TO WAREHOUSE_CUSTOMER_USER;
ALTER USER WAREHOUSE_CUSTOMER_USER DEFAULT ROLE WAREHOUSE_CUSTOMER;
ALTER USER WAREHOUSE_CUSTOMER_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_CUSTOMER_USER TEMPORARY TABLESPACE TEMP;
-- CREATE AND GRANT PERMISSIONS TO WAREHOUSE_EMPLOYEE ROLE
-- Drop the role if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP ROLE WAREHOUSE_EMPLOYEE ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1919 THEN
             dbms_output.put_line('ROLE WAREHOUSE_EMPLOYEE does not exist. Proceeding to create the role');
        END IF;
END;
/ 
CREATE ROLE WAREHOUSE_EMPLOYEE;
GRANT CONNECT TO WAREHOUSE_EMPLOYEE;
GRANT CREATE SESSION TO WAREHOUSE_EMPLOYEE;

-- CREATE WAREHOUSE_EMPLOYEE_USER AND ASSIGN WAREHOUSE_EMPLOYEE ROLE
-- Drop the user if already exists
BEGIN
    EXECUTE IMMEDIATE 'DROP USER WAREHOUSE_EMPLOYEE_USER CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            dbms_output.put_line('User WAREHOUSE_EMPLOYEE_USER does not exist. Proceeding to create the user');
        END IF;
END;
/
CREATE USER WAREHOUSE_EMPLOYEE_USER IDENTIFIED BY BostonSpring2024#;
GRANT WAREHOUSE_EMPLOYEE TO WAREHOUSE_EMPLOYEE_USER;
ALTER USER WAREHOUSE_EMPLOYEE_USER DEFAULT ROLE WAREHOUSE_EMPLOYEE;
ALTER USER WAREHOUSE_EMPLOYEE_USER DEFAULT TABLESPACE users QUOTA UNLIMITED ON users;
ALTER USER WAREHOUSE_EMPLOYEE_USER TEMPORARY TABLESPACE TEMP;
GRANT UPDATE (EMPLOYEE_NAME, ADDRESS, EMAIL, PHONE) ON WAREHOUSE_APP_ADMIN_USER.WAREHOUSE_EMPLOYEE TO WAREHOUSE_EMPLOYEE;


